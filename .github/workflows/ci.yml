name: Continuous Integration
on:
  push:
    branches:
      - main
jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2.3.4
      - name: Setup OpenJDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          cache: gradle
      - name: Validate Gradle wrapper checksum
        uses: gradle/wrapper-validation-action@v1
      - name: Run Unit Tests
        run: ./gradlew check
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 18
          extra_plugins: |
            @semantic-release/changelog@6
            @semantic-release/git@10
            @google/semantic-release-replace-plugin
      - name: Assemble artifact
        run: ./gradlew assemble
      - name: Get application version from gradle.properties
        run: |
          echo "::set-output name=TAG_VERSION::$(grep 'version' gradle.properties | awk -F '=' '/version/ {print $2}')"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Create ECR if not exist
        uses: int128/create-ecr-repository-action@v1
        with:
          repository: ${{ github.repository }}
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.repository }}
          VERSION_TAG: ${{ steps.version.outputs.TAG_VERSION }}
          SHA_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:$SHA_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
